# frozen_string_literal: true

# Generated by Selenium IDE
require 'selenium-webdriver'
require 'json'
# rubocop:disable Metrics/BlockLength
describe 'Regtest' do
  before(:each) do
    @driver = Selenium::WebDriver.for :firefox
    @vars = {}
  end
  after(:each) do
    @driver.quit
  end
  it 'regtest' do
    @driver.get('http://localhost:3000/')
    @driver.find_element(:id, 'number1').click
    @driver.find_element(:id, 'number1').send_keys('1')
    @driver.find_element(:id, 'number2').click
    @driver.find_element(:id, 'number2').send_keys('1')
    @driver.find_element(:name, 'commit').click
    @driver.find_element(:link_text, 'New User').click
    Selenium::WebDriver::Wait.new(timeout: 30).until { @driver.find_element(:id, 'user_username').displayed? }
    @driver.find_element(:id, 'user_username').click
    @driver.find_element(:id, 'user_username').send_keys('testuser')
    @driver.find_element(:id, 'user_email').click
    @driver.find_element(:id, 'user_email').send_keys('test@mail.ru')
    @driver.find_element(:id, 'user_password_digest').click
    @driver.find_element(:id, 'user_password_digest').send_keys('test')
    @driver.find_element(:name, 'commit').click
    Selenium::WebDriver::Wait.new(timeout: 30).until { @driver.find_element(:id, 'created_user').displayed? }
    expect(@driver.find_element(:id, 'created_user').text).to eq('User was successfully created.')
    @driver.find_element(:link_text, 'Back to users').click
    @driver.find_element(:link_text, 'Back to sessions').click
    @driver.find_element(:id, 'email').click
    @driver.find_element(:id, 'email').send_keys('test@mail.ru')
    @driver.find_element(:id, 'password').click
    @driver.find_element(:id, 'password').send_keys('test')
    @driver.find_element(:name, 'commit').click
    @driver.find_element(:id, 'number1').click
    @driver.find_element(:id, 'number1').send_keys('5')
    @driver.find_element(:id, 'number2').click
    @driver.find_element(:id, 'number2').send_keys('15')
    @driver.find_element(:name, 'commit').click
    Selenium::WebDriver::Wait.new(timeout: 30).until { @driver.find_element(:id, 'gcd').displayed? }
    expect(@driver.find_element(:id, 'lcm').text).to eq('15')
    @driver.find_element(:link_text, 'Ввести новые значения').click
    @driver.find_element(:link_text, 'Users list').click
    @driver.find_element(:css, '#testuser > a').click
    @driver.find_element(:css, 'button').click
    Selenium::WebDriver::Wait.new(timeout: 30).until { @driver.find_element(:id, 'notice').displayed? }
    expect(@driver.find_element(:id, 'notice').text).to eq('User was successfully destroyed.')
  end
end
# rubocop:enable Metrics/BlockLength
